{"version":3,"file":"static/js/550.6405a088.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Catalog/Catalog.styled.jsx","pages/Catalog/Catalog.jsx"],"sourcesContent":["import styled, { css } from \"styled-components\";\n// import { commonInputStyles } from \"../Modal/FormBook/FormBook.styled\";\nimport { RedButton } from \"../Card/Card.styled\";\n\nconst commonRadioCheckbox = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  text-align: center;\n  font-size: 12px;\n  font-weight: 500;\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  border: 1px solid var(--border-color);\n  padding: 10px;\n  color: var(--main-text);\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 14px;\n    padding: 17px;\n  }\n`;\n\nexport const CatalogContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  padding: 50px 0;\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n  }\n`;\n\nexport const FormFilters = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  margin-top: 30px;\n`;\n\nexport const GoToPrevPageBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: -50px;\n  align-self: flex-start;\n`;\n\nexport const LabelLocation = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 16px;\n  font-weight: 500;\n  color: var(--light-text);\n\n  svg {\n    position: absolute;\n    top: 45px;\n    left: 15px;\n    fill: none;\n    stroke: var(--main-text);\n  }\n\n  .react-dropdown-select {\n    width: 100%;\n  padding: 18px;\n  background-color: var(--input-color);\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  border-radius: 10px;\n  border: none;\n  opacity: 0.7;\n\n  transition: opacity var(--linear-transition);\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  &::placeholder {\n    color: var(--placeholder-color);\n  }\n    padding: 15px;\n    padding-left: 40px;\n    opacity: 1;\n    color: var(--light-text);\n    transition: box-shadow var(--linear-transition);\n\n    &:focus-within {\n      box-shadow: 0 0 5px var(--accent-color);\n    }\n\n    svg {\n      display: none;\n    }\n  }\n\n  .react-dropdown-select-dropdown {\n    width: 100%;\n    background-color: var(--input-color);\n    border-radius: 10px;\n    border: 2px solid var(--accent-color);\n  }\n\n  .react-dropdown-select-item {\n    border-bottom: 1px solid var(--light-text);\n\n    &:hover:not(.react-dropdown-select-item-selected) {\n      color: var(--bg-color);\n      background-color: var(--accent-color);\n      opacity: 0.7;\n    }\n  }\n\n  .react-dropdown-select-item.react-dropdown-select-item-selected,\n  .react-dropdown-select-item.react-dropdown-select-item-active {\n    color: var(--bg-color);\n    font-weight: bold;\n    background-color: var(--accent-color);\n  }\n`;\n\nexport const FiltersWrap = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  color: var(--light-text);\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const LabelFilters = styled.label`\n  font-size: 20px;\n  font-weight: 600;\n  line-height: 1.2;\n  color: var(--main-text);\n\n  hr {\n    opacity: 0.3;\n    background-color: var(--border-color);\n    display: block;\n    margin: 24px 0;\n  }\n`;\n\nexport const FieldSet = styled.fieldset`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  border: none;\n  padding: 0;\n`;\n\nexport const InputWrap = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: calc((100% - 2 * 10px) / 3);\n  height: 85px;\n\n  @media screen and (min-width: 768px) {\n    width: calc((100% - 4 * 10px) / 5);\n    height: 95px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc((100% - 2 * 10px) / 3);\n    height: 95px;\n  }\n\n  input {\n    width: 130px;\n    height: 80px;\n    padding: 15px;\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n\n    &:checked + div {\n      border-color: var(--accent-color);\n    }\n  }\n`;\n\nexport const RadioBtn = styled.div`\n  ${commonRadioCheckbox}\n`;\n\nexport const CheckBox = styled.div`\n  ${commonRadioCheckbox}\n`;\n\nexport const ButtonsWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  button {\n    ${RedButton}\n    width: 150px;\n\n    @media screen and (min-width: 1440px) {\n      margin: unset;\n    }\n  }\n\n  #reset-button {\n    background-color: var(--grey);\n    color: var(--light-text);\n    width: 150px;\n\n    @media screen and (min-width: 1440px) {\n      &:hover,\n      &:focus {\n        background-color: var(--input-background);\n        color: var(--light-text);\n      }\n    }\n  }\n`;","import { useState, useRef } from 'react';\nimport Select from 'react-dropdown-select';\nimport { SearchParams } from '../../redux/camperApi';\n\nimport {\n  FiltersWrap,\n  FormFilters,\n  LabelFilters,\n  LabelLocation,\n  RadioBtn,\n  CheckBox,\n  FieldSet,\n  InputWrap,\n  ButtonsWrap,\n} from './Filter.styled';\nimport {\n  PinIcon,\n  Van3Icon,\n  Van2Icon,\n  ShowerIcon,\n  TvIcon,\n  KitchenIcon,\n  Van1Icon,\n  TransmissionIcon,\n  ToiletIcon,\n} from '../Icons/AllIcons';\n\nconst LOCATION = [\n  { label: 'Kyiv', value: 'Ukraine, Kyiv' },\n  { label: 'Lviv', value: 'Ukraine, Lviv' },\n  { label: 'Odesa', value: 'Ukraine, Odesa' },\n  { label: 'Poltava', value: 'Ukraine, Poltava' },\n  { label: 'Dnipro', value: 'Ukraine, Dnipro' },\n  { label: 'Kharkiv', value: 'Ukraine, Kharkiv' },\n  { label: 'Sumy', value: 'Ukraine, Sumy' },\n];\n\nconst EQUIPMENT = [\n  {\n    name: 'airConditioner',\n    value: '1',\n    icon: ToiletIcon,\n    text: 'AC',\n  },\n  {\n    name: 'transmission',\n    value: 'automatic',\n    icon: TransmissionIcon,\n    text: 'Automatic',\n  },\n  {\n    name: 'kitchen',\n    value: '1',\n    icon: KitchenIcon,\n    text: 'Kitchen',\n  },\n  {\n    name: 'TV',\n    value: '1',\n    icon: TvIcon,\n    text: 'TV',\n  },\n  {\n    name: 'shower',\n    value: '1',\n    icon: ShowerIcon,\n    text: 'Shower/WC',\n  },\n];\n\nconst TYPE = [\n  {\n    value: 'panelTruck',\n    icon: Van1Icon,\n    text: 'Van',\n  },\n  {\n    value: 'fullyIntegrated',\n    icon: Van2Icon,\n    text: 'Fully Integrated',\n  },\n  {\n    value: 'alcove',\n    icon: Van3Icon,\n    text: 'Alcove',\n  },\n];\n\nexport const Filters = ({ setPage, searchParams, setSearchParams }) => {\n  const [filterParams, setFilterParams] = useState({});\n  const checkbox = useRef(null);\n  const dropdownRef = useRef(null);\n\n  const params = {};\n  SearchParams(searchParams, params);\n\n  const handleFilterAdverts = e => {\n    e.preventDefault();\n    setSearchParams({});\n    setPage(1);\n    setSearchParams({ ...filterParams });\n  };\n\n  const resetFilters = () => {\n    [...checkbox.current?.elements].forEach(input => {\n      if (input.type === 'checkbox' || input.type === 'radio') {\n        input.checked = false;\n      }\n    });\n\n    dropdownRef.current?.clearAll();\n    setSearchParams({});\n    setFilterParams({});\n  };\n\n  return (\n    <FormFilters onSubmit={handleFilterAdverts} ref={checkbox}>\n      <LabelLocation>\n        Location\n        <Select\n          ref={dropdownRef}\n          placeholder=\"Location\"\n          options={LOCATION}\n          onChange={arr => {\n            if (arr.length > 0) {\n              setFilterParams(prev => ({ ...prev, location: arr[0].value }));\n            }\n          }}\n          closeOnScroll={true}\n          color=\"var(--accent-color)\"\n        />\n        <PinIcon width={20} height={20} />\n      </LabelLocation>\n\n      <FiltersWrap>\n        Filters\n        <LabelFilters>\n          Vehicle equipment\n          <hr />\n          <FieldSet>\n            {EQUIPMENT.map(({ name, value, icon: Icon, text }, i) => (\n              <InputWrap key={`${text}/${i}`}>\n                <input\n                  type=\"checkbox\"\n                  name={name}\n                  value={value}\n                  onChange={({ target }) => {\n                    if (target.checked) {\n                      setFilterParams(prev => ({\n                        ...prev,\n                        [target.name]: target.value,\n                      }));\n                    } else {\n                      setFilterParams(prev => {\n                        const { [target.name]: removedParam, ...rest } = prev;\n                        return { ...rest };\n                      });\n                    }\n                  }}\n                />\n                <CheckBox>\n                  <Icon width={20} height={20} size={20} /> {text}\n                </CheckBox>\n              </InputWrap>\n            ))}\n          </FieldSet>\n        </LabelFilters>\n        <LabelFilters>\n          Vehicle type\n          <hr />\n          <FieldSet>\n            {TYPE.map(({ value, icon: Icon, text }, i) => (\n              <InputWrap key={`${text}/${i}`}>\n                <input\n                  type=\"radio\"\n                  name=\"type\"\n                  value={value}\n                  onChange={({ target }) =>\n                    setFilterParams(prev => ({\n                      ...prev,\n                      form: target.value,\n                    }))\n                  }\n                />\n                <RadioBtn>\n                  <Icon width={20} height={20} /> {text}\n                </RadioBtn>\n              </InputWrap>\n            ))}\n          </FieldSet>\n        </LabelFilters>\n      </FiltersWrap>\n\n      <ButtonsWrap>\n        <button type=\"submit\">Search</button>\n        <button\n          id=\"reset-button\"\n          type=\"button\"\n          aria-label=\"Reset filter fields\"\n          onClick={resetFilters}\n        >\n          Reset\n        </button>\n      </ButtonsWrap>\n    </FormFilters>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const CatalogContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  padding: 50px 0;\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n  }\n`;\n\nexport const GoToPrevPageBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  font-size: 18px;\n  font-weight: 500;\n  align-self: flex-start;\n`;","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Container } from 'components/Layout/Layout.styled';\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport AdvertCard from \"../../components/Card/Card\";\nimport { Filters } from \"components/Filter/Filter\";\nimport {\n  AdvertsList,\n  CardItem,\n  ListBtnWrap,\n  LoadMoreBtn,\n  NoItemsMsg,\n} from \"../../components/Card/Card.styled\";\nimport {\n  CatalogContainer,\n  GoToPrevPageBtn,\n} from \"./Catalog.styled\";\nimport { getAllCards, getTotal } from \"../../redux/camperApi\";\nimport { selectCard, selectTotal,selectError } from \"../../redux/camperSelectors\";\n\nconst Catalog = () => {\nconst [page, setPage] = useState(1);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [showLoadMore, setShowLoadMore] = useState(true);\n\n    const dispatch = useDispatch();\n    const cards = useSelector(selectCard);\n    const total = useSelector(selectTotal);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        setShowLoadMore(true);\n\n        if (page >= Math.ceil(total / 4)) {\n            setShowLoadMore(false);\n        }\n\n        dispatch(getTotal(searchParams));\n        dispatch(getAllCards({ page, limit: 4, searchParams }));\n    }, [dispatch, page, total, searchParams]);\n\n    const handleLoadMore = () => {\n        if (page >= Math.ceil(total / 4) || cards.length < 4) {\n            setShowLoadMore(false);\n            return;\n        }\n\n        setShowLoadMore(true);\n        setPage((prev) => prev + 1);\n    };\n\n    const handleGoToPrevPage = () => {\n        setPage((prev) => prev - 1);\n        \n    };\n\n\n  return (\n    <>\n             <Container>\n              <CatalogContainer>\n                   <Filters\n            setPage={setPage}\n            searchParams={searchParams}\n            setSearchParams={setSearchParams}\n          />\n                  <ListBtnWrap id=\"advertBlock\">\n            {page > 1 && (\n              <GoToPrevPageBtn\n                id=\"goBack\"\n                type=\"button\"\n                onClick={handleGoToPrevPage}\n              >\n                <FaArrowLeft size={20} fill=\"var(--light-text)\" />\n                Go back\n              </GoToPrevPageBtn>\n            )}\n            {cards.length < 0 || error === \"Not found\" ? (\n              <NoItemsMsg>No items</NoItemsMsg>\n            ) : (\n              <AdvertsList>\n                {cards.map((card) => (\n                  <CardItem key={card._id}>\n                    <AdvertCard card={card} />\n                  </CardItem>\n                ))}\n              </AdvertsList>\n            )}\n\n            {showLoadMore && !error && cards.length > 0 && (\n              <LoadMoreBtn type=\"button\" onClick={handleLoadMore}>\n                Load more\n              </LoadMoreBtn>\n            )}\n          </ListBtnWrap>\n                  </CatalogContainer>\n              </Container>\n    </>\n  );\n};\n\nexport default Catalog;"],"names":["commonRadioCheckbox","css","_templateObject","_taggedTemplateLiteral","FormFilters","styled","_templateObject2","_templateObject3","LabelLocation","_templateObject4","_templateObject5","FiltersWrap","_templateObject6","LabelFilters","_templateObject7","FieldSet","_templateObject8","InputWrap","_templateObject9","RadioBtn","_templateObject10","CheckBox","_templateObject11","ButtonsWrap","_templateObject12","RedButton","LOCATION","label","value","EQUIPMENT","name","icon","ToiletIcon","text","TransmissionIcon","KitchenIcon","TvIcon","ShowerIcon","TYPE","Van1Icon","Van2Icon","Van3Icon","Filters","_ref","setPage","searchParams","setSearchParams","_useState","useState","_useState2","_slicedToArray","filterParams","setFilterParams","checkbox","useRef","dropdownRef","SearchParams","_jsxs","onSubmit","e","preventDefault","_objectSpread","ref","children","_jsx","Select","placeholder","options","onChange","arr","length","prev","location","closeOnScroll","color","PinIcon","width","height","map","_ref2","i","Icon","type","_ref3","target","checked","_defineProperty","_target$name","rest","_objectWithoutProperties","_toPropertyKey","size","concat","_ref4","_ref5","form","id","onClick","_checkbox$current","_dropdownRef$current","_toConsumableArray","current","elements","forEach","input","clearAll","CatalogContainer","GoToPrevPageBtn","page","_useSearchParams","useSearchParams","_useSearchParams2","_useState3","_useState4","showLoadMore","setShowLoadMore","dispatch","useDispatch","cards","useSelector","selectCard","total","selectTotal","error","selectError","useEffect","Math","ceil","getTotal","getAllCards","limit","_Fragment","Container","ListBtnWrap","FaArrowLeft","fill","NoItemsMsg","AdvertsList","card","CardItem","AdvertCard","_id","LoadMoreBtn"],"sourceRoot":""}